management.endpoints.web.exposure.include=*

spring.datasource.url=jdbc:mysql://localhost:3306/classicmodels?useSSL=false&allowPublicKeyRetrieval=true&useLegacyDatetimeCode=false&useCompression=true&useUnicode=true&autoReconnect=true&autoReconnectForPools=true&failOverReadOnly=false
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=rico
spring.datasource.password=123456

spring.datasource.hikari.poolName=HikariSexyUnclePool
spring.datasource.hikari.minimum-idle=5
#连接池中允许的最大连接数. 缺省值:10; 推荐的公式: ((core_count * 2) + effective_spindle_count) 
spring.datasource.hikari.maximum-pool-size=15
#一个连接idle状态的最大时长(毫秒), 超时则被释放(retired), 缺省:10分钟
spring.datasource.hikari.idle-timeout=30000
#等待连接池分配连接的最大时长(毫秒), 超过这个时长还没可用的连接则发生SQLException,  缺省:30秒
spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.maxLifetime=1800000

#Hikari官方推荐的基于MySQL的优化配置, 需要加上data-source-properties, 因为这些配置是设置到 com.zaxxer.hikari.HikariConfig.dataSourceProperties里面的
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.ddl-auto=none
#@column(name="orderNumber")会导致生成的表字段名为order_number, 这两项配置可以fix这个问题
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jackson.serialization.indent_output=true